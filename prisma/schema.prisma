generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String    @map("first_name")
  lastName  String?   @map("last_name")
  email     String    @unique
  password  String
  profile   Profile?
  posts     Post[]
  following Follows[] @relation("Following")
  followers Follows[] @relation("Followers")
  createdAt DateTime  @default(now())
  salt      String
  Like      Like[]
  Comment   Comment[]

  @@map("users")
}

model Profile {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
  bio    String?

  @@map("profiles")
}

model Follows {
  id          Int      @id @default(autoincrement())
  followerId  Int
  followingId Int
  follower    User     @relation("Followers", fields: [followerId], references: [id])
  following   User     @relation("Following", fields: [followingId], references: [id])
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@map("follows")
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  content   String
  createdAt DateTime  @default(now())
  Like      Like[]
  Comment   Comment[]

  @@map("posts")
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())

  @@map("likes")
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  content   String
  createdAt DateTime @default(now())

  @@map("comments")
}
